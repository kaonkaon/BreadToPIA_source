<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kanban_2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_all(true);

x = room_width / 2;
y = 650;

menu_select = 0;
menu_select_layer = 0;
menu_select_y = y + 10;
paused = false;

main_color = make_color_rgb(199, 136, 51);
orange = make_color_rgb(233, 206, 169);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_select = clamp(menu_select, 0, 1);


if(instance_exists(self)){
    if(gamepad_button_check_pressed(0, gp_start) || keyboard_check_pressed(vk_escape)) paused = !paused;
}

y = clamp(y, room_height / 2, 650);

if (os_is_paused()) paused = 1;

switch(paused){
    case 0:
        physics_pause_enable(false);
        instance_activate_all();
        if(y &lt; 650) y += 50;
        break;
        
    case 1:
        physics_pause_enable(true);
        instance_deactivate_all(true);
        if(y &gt; (room_height / 2)) y -= 20;
        
        if(gamepad_button_check_pressed(0, gp_padu) || keyboard_check_pressed(vk_up)) {menu_select -= 1; audio_play_sound(snd_select, 10, false);}
        else if(gamepad_button_check_pressed(0, gp_padd) || keyboard_check_pressed(vk_down)) {menu_select += 1; audio_play_sound(snd_select, 10, false);}
        
        menu_select_y = clamp(menu_select_y, y + (10 + (30 * menu_select)), y + (10 + (30 * menu_select)));
        
        if(gamepad_button_check_pressed(0, gp_face1) || keyboard_check_pressed(vk_space)) {
            switch(menu_select_layer){
                case 0:
                    switch(menu_select){
                        case 0:
                            paused = 0;
                            audio_play_sound(snd_cancel, 10, false);
                            break;
                            
                        case 1:
                            menu_select = 0;
                            menu_select_layer = 1;
                            audio_play_sound(snd_ok, 10, false);
                            break;
                    }
                    break;
                    
                case 1:
                    switch(menu_select) {
                        case 0:
                            menu_select_layer = 0;
                            menu_select = 0;
                            audio_play_sound(snd_cancel, 10, false);
                            break;
                            
                        case 1:
                            // physics_pause_enable(false);
                            // instance_activate_all();
                            paused = 0;
                            // instance_destroy(self);
                            global.gameover = 1;
                            audio_play_sound(snd_ok, 10, false);
                            break;
                    }
            }
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(paused){
    draw_self();
    // draw_rectangle_colour(x - (401 / 2), y - (168 / 2), x + (401 / 2), y + (168 / 2), main_color, main_color, main_color, main_color, false);
    
    
    if(paused){
        draw_set_color(main_color);
        draw_rectangle(x - (sprite_get_width(spr_kanban) / 2) + 20, menu_select_y - 15, x + (sprite_get_width(spr_kanban) / 2) - 20, menu_select_y + 15, false);
    }
    
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_black);
    draw_set_font(ft_main);
    
    
    
    switch(menu_select_layer){
        case 0:
            draw_text_transformed(x, y - 40, language_map(global.lang, 16), 1.3, 1.3, 0);
            draw_text_transformed(x, y + 10, language_map(global.lang, 17), 0.7, 0.7, 0);
            draw_text_transformed(x, y + 30 + 10, language_map(global.lang, 14), 0.7, 0.7, 0);
            break;
            
        case 1:
            draw_text_transformed(x, y - 48, language_map(global.lang, 18), 0.9, 0.9, 0);
            draw_text_transformed_colour(x, y - 20, language_map(global.lang, 19), 0.4, 0.4, 0, c_red, c_red, c_red, c_red, 1);
            draw_text_transformed(x, y + 10, language_map(global.lang, 21), 0.7, 0.7, 0);
            draw_text_transformed(x, y + 30 + 10, language_map(global.lang, 20), 0.7, 0.7, 0);
            break;
    }
}

default_align();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
